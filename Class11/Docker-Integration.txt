To start this handson lab,you need following resources.

1. Google cloud (or any other cloud or some VM's from your local machine).
2. Jenkins VM should have 2 CPU / 4 GB memory / 40 gb Disk. Install Jenkins in CentOS 7 OS machine.
3. Class 6  must be completed and ready (jenkins server installation,plugins installation,environment variables configuration,one test java application war file build should be successful)
4. Make sure you have root access or root login credentials.


*******************************************************************************************************************
Step 1 : Install Docker in jenkins Server
Step 2 : Add Jenkins User into Docker group
Step 3:  make sure docker info command is working in jenkins user login
Step 4: Goto Jenkins console and install docker plugin
Step 5: Test the sample application build
Step 6: verify the dockerfile
Step 7: create new docker repository in hub.docker.com
Step 8: Configure docker credentials and docker repository in new pipeline
Step 9: Trigger pipeline build
Step 10: verify the build is sucessfull and also verify the hub.docker.com commit is showing.

*******************************************************************************************************************

Step 1 : Install Docker in jenkins Server

Docker Installation in CentOS

sudo yum install -y yum-utils \
  device-mapper-persistent-data \
  lvm2

sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo


sudo yum install docker-ce docker-ce-cli containerd.io

sudo systemctl start docker

sudo systemctl enable docker



*******************************************************************************************************************

Step 2 : Add Jenkins User into Docker group

sudo gpasswd -a jenkins docker


Step 3:  make sure docker info command is working in jenkins user login

su - -s /bin/bash jenkins

docker info

if this command is not working ,reboot the server and try this command again

*******************************************************************************************************************
Step 4: Goto Jenkins console and install docker plugin

CloudBees Docker Build and Publish
CloudBees Docker Custom Build Environment Plugin
Docker Pipeline
Docker
docker-build-step
Docker plugin


*******************************************************************************************************************

Step 5: Test the sample application build

https://github.com/cloudnloud/docker-jenkins-integration-sample

create jenkins maven project

In add build steps --> select Invoke top-level Maven Targets --> select Maven Version --> Goals (type install)

trigger now and ensure build is fine.
*******************************************************************************************************************
Step 6: verify the dockerfile

https://github.com/cloudnloud/docker-jenkins-integration-sample/blob/main/Dockerfile

*******************************************************************************************************************
Step 7: create new docker repository in hub.docker.com

neew repo - docker-jenkins-integration-sample

*******************************************************************************************************************
Step 8: Configure docker credentials and docker repository in new pipeline

Registry credentials

*******************************************************************************************************************
Step 9: Trigger pipeline build
Step 10: verify the build is sucessfull and also verify the hub.docker.com commit is showing.
