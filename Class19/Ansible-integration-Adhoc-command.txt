To start this handson lab,you need following resources.

1. Google cloud (or any other cloud or some VM's from your local machine).
2. Jenkins VM should have 2 CPU / 4 GB memory / 40 gb Disk. Install Jenkins in CentOS 7 OS machine.
3. Class 6 and Class 7 must be completed and ready
4. Make sure you have root access or root login credentials.
5. Create one more linux CentOs7 machine and we are going to use this machine as an ansible client

*******************************************************************************************************************
prerequisites
Step 1: Install and configure jenkins in centos 7 machine

refer --> https://github.com/cloudnloud/Devops_Tools_Training/tree/main/Class6

*******************************************************************************************************************
Step 1 : Create user in node1 ansible client linux machine
Step 2 : Exchange SSH keys
Step 3:  Install and Configure ansible in jenkins machine
Step 4:  In both jenkins machine and Ansible client node1 machine - enable jenkins user as an sudo access without password
Step 5:  Test from Jenkins server - Ansible ad-hoc command working or not ?
Step 6: Now create pipeline and test the ansible ad-hoc commands

*******************************************************************************************************************
Step 1 : Create user in node1 ansible client linux machine

In node1 machine

yum install wget git  -y

useradd -d /var/lib/jenkins jenkins

cat /etc/passwd | grep -i jenkins

passwd jenkins

*******************************************************************************************************************
Step 2 : Exchange SSH keys


if you are using cloud machines then first ensure direct ssh is enabled or not ?

in both linux machines go to /etc/ssh/sshd_config file
enable the following line

PasswordAuthentication yes

disable following line

PasswordAuthentication no

save this file

run the below command

systemctl restart sshd


in jenkins machine

su - -s /bin/bash jenkins
ssh-keygen
cat /var/lib/jenkins/.ssh/id_rsa.pub

now from jenkins machine try to copy the ssh keys to 2nd linux machine ansible client node1

ssh-copy-id node1
*******************************************************************************************************************
Step 3:  Install and Configure ansible in jenkins machine

yum install https://mirror.sjtu.edu.cn/fedora/epel/7/x86_64/Packages/a/ansible-python3-2.9.27-1.el7.noarch.rpm

in jenkins machine as an root user

/etc/ansible/ansible.cfg


inventory      = /etc/ansible/hosts

[privilege_escalation]
become=True
become_method=sudo
become_user=root
become_ask_pass=False


vim /etc/ansible/hosts

node1

ansible all --list

Also install jenkins plugin called ansible in jenkins console

also set the ansible binary path

*******************************************************************************************************************

Step 4:  In both jenkins machine and Ansible client node1 machine - enable jenkins user as an sudo access without password

In both machines (jenkins machine now also acting as an ansible machine and node1 which is ansible client)

visudo

jenkins ALL=(ALL)       NOPASSWD: ALL


in jenkins machine login as an jenkins user 

su - -s /bin/bash jenkins

ansible all --list

ansible all -m ping

this command output should come as green ping/pong

*******************************************************************************************************************

Step 5:  Test from Jenkins server - Ansible ad-hoc command working or not ?

Go to jenkins server cli prompt.Then run the following ansible ad-hoc command to make sure it is working

ansible all -m yum -a "name=httpd state=latest"

ansible all -m yum -a "name=httpd state=absent"

in paralel go to node1 machine and run below command to ensure httpd package is there or not ?

yum list httpd

*******************************************************************************************************************

Step 6: Now create pipeline and test the ansible ad-hoc commands

Host pattern --> node1
File or host list --> /etc/ansible/hosts
Module --> yum
Module arguments or command to execute --> name=httpd state=latest


